<!--

Quick quack of a build file - needs cleaning up!

-->
<project name="java-design-patterns" default="jar" basedir=".">
	
    <description>
    	Builds and test design pattern cook book.
    </description>	
	
    <!-- Directory structure -->
    <property name="src" location="src/java"/>
    <property name="tests" location="src/test"/>
    <property name="build" location="build"/>	
    <property name="dist"  location="dist"/> 
    <property name="libs"  location="libs"/>
    <property name="resources"  location="resources"/>
    	
    <target name="init" description="Grabs current time, creates the build dir if needed">
        <tstamp>
            <format property="NOW_GB" pattern="yyyy-MMMM-dd-HHmm" locale="en,GB"/>
        </tstamp>
        <mkdir dir="${build}"/>
        <mkdir dir="${build}/tests"/>
    </target>
	
    <!-- Make sure all the jar dependencies are in your libs folder -->
    <target name="compile" depends="init" description="Compiles the source" >
        <javac srcdir="${src}" destdir="${build}">
            <classpath>
                <fileset dir="${libs}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javac>
    </target>
	
    <target name="compile-tests" depends="compile" description="Compiles the source" >
        <javac srcdir="${tests}" destdir="${build}/tests">
            <classpath>
                <fileset dir="${libs}">
                    <include name="**/*.jar"/>
                </fileset>
            	<pathelement path="${build}"/>
            </classpath>
        </javac>
    </target>
	
	<target name="test" depends="compile-tests">
    	<junit showoutput="yes" fork="true">
    	    <classpath>
    	        <pathelement location="libs/junit-4.8.2.jar"/>
    	    	<pathelement path="${build}"/>
                <pathelement path="${build}/tests"/>
    	    </classpath>
    
    	    <formatter type="plain" usefile="false" />
    
    	    <batchtest>
    	        <fileset dir="${tests}"/>
    	    </batchtest>
    	</junit> 
    </target>

    <target name="jar" depends="test" description="Builds the dist dir if needed, builds the .jar file" >
        <mkdir dir="${dist}/lib"/>
        <!-- Put everything in ${build} into the ada-engine-${DSTAMP}.jar file - crude artefact versioning for now! -->
        <jar jarfile="${dist}/lib/java-design-patterns-${NOW_GB}.jar" basedir="${build}"/>
    </target>
	
    <target name="dist"  depends="jar" description="Creates a .zip file of the runtime env for installation" >
    	
    	<mkdir dir="${dist}/resources"/>
    	
        <copy todir="${dist}/resources">
            <fileset dir="${resources}" includes="**/*.properties"/>
        </copy>
    	
        <zip destfile="${dist}/zip/java-design-patterns.zip">
        	
    	    <zipfileset dir="${libs}" prefix="libs"/>
            <zipfileset dir="${dist}/resources" prefix="resources"/>
            <zipfileset dir="." includes="ada.sh"/>
        	
            <zipfileset dir="." includes="LICENSE"/>
            <zipfileset dir="." includes="README.md"/>
            	
            <!-- Add ada-engine jar!-->
            <zipfileset dir="${dist}/lib" prefix="libs"/>           	
        </zip>
    </target>

    <target name="clean" description="Removes the .class files AND the .jar; it nukes build and dist dirs" >
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>
	
</project>